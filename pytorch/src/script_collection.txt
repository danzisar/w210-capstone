# Because the original repo doesn't provide pre-trained model, we have to go through the training process again
# Run each of below bash script in terminal

# vgg_15_BN_64
# Train on CIFAR10
$ python3.6 -u train.py --dataset CIFAR10 --arch vgg --seed 7 --outdir results/vgg_15_BN_64/10_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/vgg_15_BN_64/10_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/vgg_15_BN_64/10_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/vgg_15_BN_64/10_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_30K --ckpt results/vgg_15_BN_64/10_default_100_021/model_best_state.pth

# Train on CIFAR10_10K
$ python3.6 -u train.py --dataset CIFAR10_10K --arch vgg --seed 7 --outdir results/vgg_15_BN_64/10K_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/vgg_15_BN_64/10K_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/vgg_15_BN_64/10K_default_100_021/model_best_state.pth
# Test on CIFAR10_101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/vgg_15_BN_64/10K_default_100_021/model_best_state.pth
# Test on CIFAR10_102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/vgg_15_BN_64/10K_default_100_021/model_best_state.pth

# Train on CIFAR10_30K
$ python3.6 -u train.py --dataset CIFAR10_30K --arch vgg --seed 7 --outdir results/vgg_15_BN_64/10_30K_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/vgg_15_BN_64/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR10_30K
$ python3.6 -u predict.py --testset CIFAR10_30K --ckpt results/vgg_15_BN_64/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR10_101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/vgg_15_BN_64/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR10_102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/vgg_15_BN_64/10_30K_default_100_021/model_best_state.pth

# Train on CIFAR102
$ python3.6 -u train.py --dataset CIFAR102 --arch vgg --seed 7 --outdir results/vgg_15_BN_64/102_default_100_021
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_30K --ckpt results/vgg_15_BN_64/102_default_100_021/model_best_state.pth
# Test on CIFAR10_101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/vgg_15_BN_64/102_default_100_021/model_best_state.pth
# Test on CIFAR10_102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/vgg_15_BN_64/102_default_100_021/model_best_state.pth
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/vgg_15_BN_64/102_default_100_021/model_best_state.pth

# Train on CIFAR102_30K
$ python3.6 -u train.py --dataset CIFAR102_30K --arch vgg --seed 7 --outdir results/vgg_15_BN_64/102_30K_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/vgg_15_BN_64/102_30K_default_100_021/model_best_state.pth
# Test on CIFAR10_30K
$ python3.6 -u predict.py --testset CIFAR10_30K --ckpt results/vgg_15_BN_64/102_30K_default_100_021/model_best_state.pth
# Test on CIFAR10_101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/vgg_15_BN_64/102_30K_default_100_021/model_best_state.pth
# Test on CIFAR10_102_30K
$ python3.6 -u predict.py --testset CIFAR102_30K --ckpt results/vgg_15_BN_64/102_30K_default_100_021/model_best_state.pth

# resnet_basic_32
# Train on CIFAR10
$ python3.6 -u train.py --dataset CIFAR10 --arch resnet --depth 32 --block_type basic --seed 7 --outdir results/resnet_basic_32/10_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnet_basic_32/10_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnet_basic_32/10_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnet_basic_32/10_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/resnet_basic_32/10_default_100_021/model_best_state.pth

# Train on CIFAR10_10K
$ python3.6 -u train.py --dataset CIFAR10_10K --arch resnet --depth 32 --block_type basic --seed 7 --outdir results/resnet_basic_32/10K_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnet_basic_32/10K_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnet_basic_32/10K_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnet_basic_32/10K_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/resnet_basic_32/10K_default_100_021/model_best_state.pth

# Train on CIFAR10_30K
$ python3.6 -u train.py --dataset CIFAR10_30K --arch resnet --depth 32 --block_type basic --seed 7 --outdir results/resnet_basic_32/10_30K_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnet_basic_32/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnet_basic_32/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnet_basic_32/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_30K --ckpt results/resnet_basic_32/10_30K_default_100_021/model_best_state.pth

# Train on CIFAR102
$ python3.6 -u train.py --dataset CIFAR102 --arch resnet --depth 32 --block_type basic --seed 7 --outdir results/resnet_basic_32/102_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnet_basic_32/102_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnet_basic_32/102_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnet_basic_32/102_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/resnet_basic_32/102_default_100_021/model_best_state.pth


# resnet_basic_44
# Train on CIFAR10
$ python3.6 -u train.py --dataset CIFAR10 --arch resnet --depth 44 --block_type basic --seed 7 --outdir results/resnet_basic_44/10_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnet_basic_44/10_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnet_basic_44/10_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnet_basic_44/10_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/resnet_basic_44/10_default_100_021/model_best_state.pth

# Train on CIFAR10_10K
$ python3.6 -u train.py --dataset CIFAR10_10K --arch resnet --depth 44 --block_type basic --seed 7 --outdir results/resnet_basic_44/10K_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnet_basic_44/10K_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnet_basic_44/10K_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnet_basic_44/10K_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/resnet_basic_44/10K_default_100_021/model_best_state.pth

# Train on CIFAR10_30K
$ python3.6 -u train.py --dataset CIFAR10_30K --arch resnet --depth 44 --block_type basic --seed 7 --outdir results/resnet_basic_44/10_30K_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnet_basic_44/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnet_basic_44/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnet_basic_44/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR10_30K
$ python3.6 -u predict.py --testset CIFAR10_30K --ckpt results/resnet_basic_44/10_30K_default_100_021/model_best_state.pth

# Train on CIFAR102
$ python3.6 -u train.py --dataset CIFAR102 --arch resnet --depth 44 --block_type basic --seed 7 --outdir results/resnet_basic_44/102_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnet_basic_44/102_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnet_basic_44/102_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnet_basic_44/102_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/resnet_basic_44/102_default_100_021/model_best_state.pth

# resnet_basic_56
# Train on CIFAR10
$ python3.6 -u train.py --dataset CIFAR10 --arch resnet --depth 56 --block_type basic --seed 7 --outdir results/resnet_basic_56/10_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnet_basic_56/10_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnet_basic_56/10_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnet_basic_56/10_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/resnet_basic_56/10_default_100_021/model_best_state.pth

# Train on CIFAR10_10K
$ python3.6 -u train.py --dataset CIFAR10_10K --arch resnet --depth 56 --block_type basic --seed 7 --outdir results/resnet_basic_56/10K_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnet_basic_56/10K_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnet_basic_56/10K_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnet_basic_56/10K_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/resnet_basic_56/10K_default_100_021/model_best_state.pth

# Train on CIFAR10_30K
$ python3.6 -u train.py --dataset CIFAR10_30K --arch resnet --depth 56 --block_type basic --seed 7 --outdir results/resnet_basic_56/10_30K_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnet_basic_56/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnet_basic_56/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnet_basic_56/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_30K --ckpt results/resnet_basic_56/10_30K_default_100_021/model_best_state.pth

# Train on CIFAR102
$ python3.6 -u train.py --dataset CIFAR102 --arch resnet --depth 56 --block_type basic --seed 7 --outdir results/resnet_basic_56/102_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnet_basic_56/102_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnet_basic_56/102_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnet_basic_56/102_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/resnet_basic_56/102_default_100_021/model_best_state.pth

# resnet_basic_110
# Train on CIFAR10
$ python3.6 -u train.py --dataset CIFAR10 --arch resnet --depth 110 --block_type basic --seed 7 --outdir results/resnet_basic_110/10_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnet_basic_110/10_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnet_basic_110/10_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnet_basic_110/10_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/resnet_basic_110/10_default_100_021/model_best_state.pth

# Train on CIFAR10_10K
$ python3.6 -u train.py --dataset CIFAR10_10K --arch resnet --depth 110 --block_type basic --seed 7 --outdir results/resnet_basic_110/10K_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnet_basic_110/10K_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnet_basic_110/10K_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnet_basic_110/10K_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/resnet_basic_110/10K_default_100_021/model_best_state.pth

# Train on CIFAR10_30K
$ python3.6 -u train.py --dataset CIFAR10_30K --arch resnet --depth 110 --block_type basic --seed 7 --outdir results/resnet_basic_110/10_30K_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnet_basic_110/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnet_basic_110/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnet_basic_110/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR10_30K
$ python3.6 -u predict.py --testset CIFAR10_30K --ckpt results/resnet_basic_110/10_30K_default_100_021/model_best_state.pth

# Train on CIFAR102
$ python3.6 -u train.py --dataset CIFAR102 --arch resnet --depth 110 --block_type basic --seed 7 --outdir results/resnet_basic_110/102_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnet_basic_110/102_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnet_basic_110/102_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnet_basic_110/102_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/resnet_basic_110/102_default_100_021/model_best_state.pth

# resnet_preact_basic_110
# Train on CIFAR10
$ python3.6 -u train.py --dataset CIFAR10 --arch resnet_preact --depth 110 --block_type basic --seed 7 --outdir results/resnet_preact_basic_110/10_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnet_preact_basic_110/10_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnet_preact_basic_110/10_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnet_preact_basic_110/10_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/resnet_preact_basic_110/10_default_100_021/model_best_state.pth

# Train on CIFAR10_10K
$ python3.6 -u train.py --dataset CIFAR10_10K --arch resnet_preact --depth 110 --block_type basic --seed 7 --outdir results/resnet_preact_basic_110/10K_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnet_preact_basic_110/10K_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnet_preact_basic_110/10K_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnet_preact_basic_110/10K_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/resnet_preact_basic_110/10K_default_100_021/model_best_state.pth

# Train on CIFAR10_30K
$ python3.6 -u train.py --dataset CIFAR10_30K --arch resnet_preact --depth 110 --block_type basic --seed 7 --outdir results/resnet_preact_basic_110/10_30K_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnet_preact_basic_110/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnet_preact_basic_110/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnet_preact_basic_110/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR10_30K
$ python3.6 -u predict.py --testset CIFAR10_30K --ckpt results/resnet_preact_basic_110/10_30K_default_100_021/model_best_state.pth

# Train on CIFAR102
$ python3.6 -u train.py --dataset CIFAR102 --arch resnet_preact --depth 110 --block_type basic --seed 7 --outdir results/resnet_preact_basic_110/102_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnet_preact_basic_110/102_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnet_preact_basic_110/102_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnet_preact_basic_110/102_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/resnet_preact_basic_110/102_default_100_021/model_best_state.pth

# resnet_preact_bottleneck_164
# Train on CIFAR10
$ python3.6 -u train.py --dataset CIFAR10 --arch resnet_preact --depth 164 --block_type bottleneck --seed 7 --outdir results/resnet_preact_bottleneck_164/10_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnet_preact_bottleneck_164/10_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnet_preact_bottleneck_164/10_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnet_preact_bottleneck_164/10_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/resnet_preact_bottleneck_164/10_default_100_021/model_best_state.pth

# Train on CIFAR10_10K
$ python3.6 -u train.py --dataset CIFAR10_10K --arch resnet_preact --depth 164 --block_type bottleneck --seed 7 --outdir results/resnet_preact_bottleneck_164/10K_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnet_preact_bottleneck_164/10K_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnet_preact_bottleneck_164/10K_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnet_preact_bottleneck_164/10K_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/resnet_preact_bottleneck_164/10K_default_100_021/model_best_state.pth

# Train on CIFAR10_30K
$ python3.6 -u train.py --dataset CIFAR10_30K --arch resnet_preact --depth 164 --block_type bottleneck --seed 7 --outdir results/resnet_preact_bottleneck_164/10_30K_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnet_preact_bottleneck_164/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnet_preact_bottleneck_164/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnet_preact_bottleneck_164/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_30K --ckpt results/resnet_preact_bottleneck_164/10_30K_default_100_021/model_best_state.pth

# Train on CIFAR102
$ python3.6 -u train.py --dataset CIFAR102 --arch resnet_preact --depth 164 --block_type bottleneck --seed 7 --outdir results/resnet_preact_bottleneck_164/102_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnet_preact_bottleneck_164/102_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnet_preact_bottleneck_164/102_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnet_preact_bottleneck_164/102_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/resnet_preact_bottleneck_164/102_default_100_021/model_best_state.pth

# resnext_29_4x64d
# Train on CIFAR10
$ python3.6 -u train.py --dataset CIFAR10 --arch resnext --depth 29 --cardinality 4 --base_channels 64 --batch_size 32 --base_lr 0.025 --seed 7 --outdir results/resnext_29_4x64d/10_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnext_29_4x64d/10_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnext_29_4x64d/10_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnext_29_4x64d/10_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/resnext_29_4x64d/10_default_100_021/model_best_state.pth

# Train on CIFAR10_10K
$ python3.6 -u train.py --dataset CIFAR10_10K --arch resnext --depth 29 --cardinality 4 --base_channels 64 --batch_size 32 --base_lr 0.025 --seed 7 --outdir results/resnext_29_4x64d/10K_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnext_29_4x64d/10K_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnext_29_4x64d/10K_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnext_29_4x64d/10K_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/resnext_29_4x64d/10K_default_100_021/model_best_state.pth

# Train on CIFAR10_30K
$ python3.6 -u train.py --dataset CIFAR10_30K --arch resnext --depth 29 --cardinality 4 --base_channels 64 --batch_size 32 --base_lr 0.025 --seed 7 --outdir results/resnext_29_4x64d/10_30K_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnext_29_4x64d/10K_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnext_29_4x64d/10K_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnext_29_4x64d/10K_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/resnext_29_4x64d/10K_default_100_021/model_best_state.pth

# Train on CIFAR102
$ python3.6 -u train.py --dataset CIFAR102 --arch resnext --depth 29 --cardinality 4 --base_channels 64 --batch_size 32 --base_lr 0.025 --seed 7 --outdir results/resnext_29_4x64d/102_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnext_29_4x64d/102_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnext_29_4x64d/102_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnext_29_4x64d/102_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/resnext_29_4x64d/102_default_100_021/model_best_state.pth

# resnext_29_8x64d
# Train on CIFAR10
$ python3.6 -u train.py --dataset CIFAR10 --arch resnext --depth 29 --cardinality 8 --base_channels 64 --batch_size 64 --base_lr 0.05 --seed 7 --outdir results/resnext_29_8x64d/10_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnext_29_8x64d/10_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnext_29_8x64d/10_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnext_29_8x64d/10_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/resnext_29_8x64d/10_default_100_021/model_best_state.pth

# Train on CIFAR10_10K
$ python3.6 -u train.py --dataset CIFAR10_10K --arch resnext --depth 29 --cardinality 8 --base_channels 64 --batch_size 64 --base_lr 0.05 --seed 7 --outdir results/resnext_29_8x64d/10K_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnext_29_8x64d/10K_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnext_29_8x64d/10K_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnext_29_8x64d/10K_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/resnext_29_8x64d/10K_default_100_021/model_best_state.pth

# Train on CIFAR10_30K
$ python3.6 -u train.py --dataset CIFAR10_30K --arch resnext --depth 29 --cardinality 8 --base_channels 64 --batch_size 64 --base_lr 0.05 --seed 7 --outdir results/resnext_29_8x64d/10_30K_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnext_29_8x64d/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnext_29_8x64d/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnext_29_8x64d/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_30K --ckpt results/resnext_29_8x64d/10_30K_default_100_021/model_best_state.pth

# Train on CIFAR102
$ python3.6 -u train.py --dataset CIFAR102 --arch resnext --depth 29 --cardinality 8 --base_channels 64 --batch_size 64 --base_lr 0.05 --seed 7 --outdir results/resnext_29_8x64d/102_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/resnext_29_8x64d/102_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/resnext_29_8x64d/102_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/resnext_29_8x64d/102_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/resnext_29_8x64d/102_default_100_021/model_best_state.pth

# shake_shake_32d
# Train on CIFAR10
$ python3.6 -u train.py --dataset CIFAR10 --arch shake_shake --depth 26 --base_channels 32 --shake_forward True --shake_backward True --shake_image True --seed 7 --outdir results/shake_shake_26_2x32d_SSI/10_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/shake_shake_26_2x32d_SSI/10_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/shake_shake_26_2x32d_SSI/10_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/shake_shake_26_2x32d_SSI/10_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/shake_shake_26_2x32d_SSI/10_default_100_021/model_best_state.pth

# Train on CIFAR10_10K
$ python3.6 -u train.py --dataset CIFAR10_10K --arch shake_shake --depth 26 --base_channels 32 --shake_forward True --shake_backward True --shake_image True --seed 7 --outdir results/shake_shake_26_2x32d_SSI/10K_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/shake_shake_26_2x32d_SSI/10K_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/shake_shake_26_2x32d_SSI/10K_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/shake_shake_26_2x32d_SSI/10K_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/shake_shake_26_2x32d_SSI/10K_default_100_021/model_best_state.pth

# Train on CIFAR10_30K
$ python3.6 -u train.py --dataset CIFAR10_30K --arch shake_shake --depth 26 --base_channels 32 --shake_forward True --shake_backward True --shake_image True --seed 7 --outdir results/shake_shake_26_2x32d_SSI/10_30K_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/shake_shake_26_2x32d_SSI/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/shake_shake_26_2x32d_SSI/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/shake_shake_26_2x32d_SSI/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR10_30K
$ python3.6 -u predict.py --testset CIFAR10_30K --ckpt results/shake_shake_26_2x32d_SSI/10_30K_default_100_021/model_best_state.pth

# Train on CIFAR102
$ python3.6 -u train.py --dataset CIFAR102 --arch shake_shake --depth 26 --base_channels 32 --shake_forward True --shake_backward True --shake_image True --seed 7 --outdir results/shake_shake_26_2x32d_SSI/102_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/shake_shake_26_2x32d_SSI/102_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/shake_shake_26_2x32d_SSI/102_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/shake_shake_26_2x32d_SSI/102_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/shake_shake_26_2x32d_SSI/102_default_100_021/model_best_state.pth

# shake_shake_64d
# Train on CIFAR10
$ python3.6 -u train.py --dataset CIFAR10 --arch shake_shake --depth 26 --base_channels 64 --shake_forward True --shake_backward True --shake_image True --batch_size 64 --base_lr 0.1 --seed 7 --outdir results/shake_shake_26_2x64d_SSI/10_default_100_021
# shake_shake_96d
$ python3.6 -u train.py --dataset CIFAR102 --arch shake_shake --depth 26 --base_channels 96 --shake_forward True --shake_backward True --shake_image True --seed 7 --outdir results/shake_shake_26_2x96d_SSI/01
# shake_shake_64d_cutout
$ python3.6 -u train.py --dataset CIFAR102 --arch shake_shake --depth 26 --base_channels 64 --shake_forward True --shake_backward True --shake_image True --batch_size 64 --base_lr 0.1 --seed 7 --outdir results/shake_shake_26_2x64d_SSI_cutout/01 --use_cutout

# wide_resnet_28_10
# Train on CIFAR10
$ python3.6 -u train.py --dataset CIFAR10 --arch wrn --depth 28 --widening_factor 10 --seed 7 --outdir results/wrn_28_10/10_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/wrn_28_10/10_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/wrn_28_10/10_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/wrn_28_10/10_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/wrn_28_10/10_default_100_021/model_best_state.pth

# Train on CIFAR10_10K
$ python3.6 -u train.py --dataset CIFAR10_10K --arch wrn --depth 28 --widening_factor 10 --seed 7 --outdir results/wrn_28_10/10K_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/wrn_28_10/10K_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/wrn_28_10/10K_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/wrn_28_10/10K_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/wrn_28_10/10K_default_100_021/model_best_state.pth

# Train on CIFAR10_30K
$ python3.6 -u train.py --dataset CIFAR10_30K --arch wrn --depth 28 --widening_factor 10 --seed 7 --outdir results/wrn_28_10/10_30K_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/wrn_28_10/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/wrn_28_10/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/wrn_28_10/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_30K --ckpt results/wrn_28_10/10_30K_default_100_021/model_best_state.pth

# Train on CIFAR102
$ python3.6 -u train.py --dataset CIFAR102 --arch wrn --depth 28 --widening_factor 10 --seed 7 --outdir results/wrn_28_10/102_default_100_021
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/wrn_28_10/102_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/wrn_28_10/102_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/wrn_28_10/102_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/wrn_28_10/102_default_100_021/model_best_state.pth

# wide_resnet_28_10_cutout
# Train on CIFAR10
$ python3.6 -u train.py --dataset CIFAR10 --arch wrn --depth 28 --widening_factor 10 --seed 7 --outdir results/wide_resnet_28_10_cutout/10_default_100_021 --use_cutout
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/wide_resnet_28_10_cutout/10_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/wide_resnet_28_10_cutout/10_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/wide_resnet_28_10_cutout/10_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/wide_resnet_28_10_cutout/10_default_100_021/model_best_state.pth

# Train on CIFAR10_10K
$ python3.6 -u train.py --dataset CIFAR10_10K --arch wrn --depth 28 --widening_factor 10 --seed 7 --outdir results/wide_resnet_28_10_cutout/10K_default_100_021 --use_cutout
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/wide_resnet_28_10_cutout/10K_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/wide_resnet_28_10_cutout/10K_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/wide_resnet_28_10_cutout/10K_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/wide_resnet_28_10_cutout/10K_default_100_021/model_best_state.pth

# Train on CIFAR10_30K
$ python3.6 -u train.py --dataset CIFAR10_30K --arch wrn --depth 28 --widening_factor 10 --seed 7 --outdir results/wide_resnet_28_10_cutout/10_30K_default_100_021 --use_cutout
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/wide_resnet_28_10_cutout/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/wide_resnet_28_10_cutout/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/wide_resnet_28_10_cutout/10_30K_default_100_021/model_best_state.pth
# Test on CIFAR10_30K
$ python3.6 -u predict.py --testset CIFAR10_30K --ckpt results/wide_resnet_28_10_cutout/10_30K_default_100_021/model_best_state.pth

# Train on CIFAR102
$ python3.6 -u train.py --dataset CIFAR102 --arch wrn --depth 28 --widening_factor 10 --seed 7 --outdir results/wide_resnet_28_10_cutout/102_default_100_021 --use_cutout
# Test on CIFAR10
$ python3.6 -u predict.py --testset CIFAR10 --ckpt results/wide_resnet_28_10_cutout/102_default_100_021/model_best_state.pth
# Test on CIFAR101
$ python3.6 -u predict.py --testset CIFAR101 --ckpt results/wide_resnet_28_10_cutout/102_default_100_021/model_best_state.pth
# Test on CIFAR102
$ python3.6 -u predict.py --testset CIFAR102 --ckpt results/wide_resnet_28_10_cutout/102_default_100_021/model_best_state.pth
# Test on CIFAR10_10K
$ python3.6 -u predict.py --testset CIFAR10_10K --ckpt results/wide_resnet_28_10_cutout/102_default_100_021/model_best_state.pth


